<?php
// --------------------------------------------------------------------------
namespace App\Http\Controllers\Backend\Property;
use App\Http\Controllers\Controller;
// --------------------------------------------------------------------------
use Carbon\Carbon;
use Illuminate\Http\Request;
use Illuminate\Database\Eloquent\Builder;
// --------------------------------------------------------------------------
use App\Models\Property;
use App\Models\PropertyLogActivity;
// --------------------------------------------------------------------------

// --------------------------------------------------------------------------
class PropertyDetailController extends Controller {
    // ----------------------------------------------------------------------
    public function index( $id ){
        $data['page_title']     = __('label.details_of_properties');
        $data['page_type']      = 'detail';
        $data['property']       = Property::with(['property_photos.file', 'property_flyers.file','property_publish'])->findOrFail($id);
        
        return view( 'backend.property.detail.index', $data );
    }
    // ----------------------------------------------------------------------

    // ----------------------------------------------------------------------
    public function filter( Request $request, $id ){
        // ------------------------------------------------------------------
        $filter = (object) $request->filter;
        $response = (object) array( 'status' => 'success' );
        // ------------------------------------------------------------------
        
        // ------------------------------------------------------------------
        // Default configuration
        // ------------------------------------------------------------------
        $page = $filter->page ?? 1;
        $perpage = 10; $columns = ['*'];
        // ------------------------------------------------------------------

        // ------------------------------------------------------------------
        // Base query
        // ------------------------------------------------------------------
        $query = PropertyLogActivity::where('properties_id', $id)->with('property_scraping_type');
        // ------------------------------------------------------------------


        // ------------------------------------------------------------------
        // View perpage
        // ------------------------------------------------------------------
        $list = [ 1, 2, 5, 10, 20, 50 ];
        if( !empty( $filter->perpage )){
            $view = (int) $filter->perpage;
            if( in_array( $view, $list )) $perpage = $view;
        }
        // ------------------------------------------------------------------

        // ------------------------------------------------------------------
        // Minimum Property Created_at
        // ------------------------------------------------------------------
        if( !empty( $filter->min ) ){
            $query->whereDate( 'created_at', '>=', $filter->min );
        }
        // ------------------------------------------------------------------

        // ------------------------------------------------------------------
        // Maximum Property Created_at
        // ------------------------------------------------------------------
        if( !empty( $filter->max ) ){
            $query->whereDate( 'created_at', '<=', $filter->max );
        }
        // ------------------------------------------------------------------
        // WhereBetween and WhereDate Created_at
        // ------------------------------------------------------------------
        if(!empty( $filter->max ) && !empty( $filter->min )) {
            if($filter->max == $filter->min) {
                $query->whereDate( 'created_at', '=', $filter->max );
            }
        }
        // ------------------------------------------------------------------
        // ------------------------------------------------------------------

        // ------------------------------------------------------------------
        // General search
        // ------------------------------------------------------------------
        if( !empty( $filter->search )){
            // --------------------------------------------------------------
            $query->where( function( $query ) use( $filter ){
                // ----------------------------------------------------------
                $keywords = preg_replace( '/\s+/', ' ', $filter->search );
                $keywords = explode( ' ', trim( $keywords ));
                // ----------------------------------------------------------

                // ----------------------------------------------------------
                // Search user
                // ----------------------------------------------------------
                $query->where( function( $query ) use( $keywords ){
                    if( !empty( $keywords )) foreach( $keywords as $keyword ){
                        $query->orWhere( 'created_at', 'LIKE', "%{$keyword}%" );
                        $query->orWhere( 'before_update_text', 'LIKE', "%{$keyword}%" );
                        $query->orWhere( 'after_update_text', 'LIKE', "%{$keyword}%" );
                    }
                });
                // ----------------------------------------------------------
            });
        }
        // ------------------------------------------------------------------


        // ------------------------------------------------------------------
        // Result order
        // ------------------------------------------------------------------
        $orders = [ 'created_at', 'before_update_text', 'after_update_text'];
        if( !empty( $filter->order ) && in_array( $filter->order, $orders )){
            // --------------------------------------------------------------
            $order = null;
            $direction = $filter->direction ?? 'asc';
            // --------------------------------------------------------------

            // --------------------------------------------------------------
            // Order by 
            // --------------------------------------------------------------
            $order = $filter->order; // Everything else
            // --------------------------------------------------------------

            // --------------------------------------------------------------
            if( $order ) $query = $query->orderBy( $order, $direction );
            // --------------------------------------------------------------
        }
        // ------------------------------------------------------------------
        

        // ------------------------------------------------------------------
        // Add the relations, make sure they are unique
        // ------------------------------------------------------------------
        // $query->with( $relations->unique()->all());
        // ------------------------------------------------------------------
        
        // ------------------------------------------------------------------
        // Paginate the result
        // ------------------------------------------------------------------
        $paginator = $query->paginate( $perpage, $columns, 'page', $page );
        // ------------------------------------------------------------------

        // ------------------------------------------------------------------
        $response->result = $paginator;
        return response()->json( $response, 200, [], JSON_NUMERIC_CHECK );
        // ------------------------------------------------------------------
    }
    // ----------------------------------------------------------------------
}
